name: Deploy to VPS

on:
  push:
    branches:
      - dev  # Adjust if your default branch is named differently

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build Angular Project
        run: npm run build --prod

      - name: Setup SSH
        env:
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          VPS_IP: ${{ vars.VPS_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$VPS_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $VPS_IP >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          VPS_USER: ${{ vars.VPS_USER }}
          VPS_IP: ${{ vars.VPS_IP }}
        run: |
          # Ensure directory exists and set permissions
          ssh $VPS_USER@$VPS_IP "sudo mkdir -p /var/www/angular && sudo chown -R $VPS_USER:$VPS_USER /var/www/angular"
          
          # Create backup if exists
          ssh $VPS_USER@$VPS_IP "if [ -d /var/www/angular ]; then sudo mv /var/www/angular /var/www/angular_backup; fi"
          
          # Create fresh directory
          ssh $VPS_USER@$VPS_IP "sudo mkdir -p /var/www/angular && sudo chown -R $VPS_USER:$VPS_USER /var/www/angular"
          
          # Copy new build to server
          scp -r dist/* $VPS_USER@$VPS_IP:/var/www/angular/
          
          # Set proper permissions and cleanup
          ssh $VPS_USER@$VPS_IP "sudo chown -R www-data:www-data /var/www/angular && sudo rm -rf /var/www/angular_backup"

